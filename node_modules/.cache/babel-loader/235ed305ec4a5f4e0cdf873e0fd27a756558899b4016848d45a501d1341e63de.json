{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\student\\\\Documents\\\\git\\\\_404_Dragons.iml\\\\src\\\\Bird.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst animation = [\"/Icons/Bird/Bird_1.png\", \"/Icons/Bird/Bird_2.png\", \"/Icons/Bird/Bird_3.png\", \"/Icons/Bird/Bird_4.png\", \"/Icons/Bird/Bird_5.png\", \"/Icons/Bird/Bird_6.png\", \"/Icons/Bird/Bird_7.png\", \"/Icons/Bird/Bird_7.png\", \"/Icons/Bird/Bird_8.png\", \"/Icons/Bird/Bird_9.png\", \"/Icons/Bird/Bird_10.png\"];\nfunction Bird({\n  getDivAction,\n  time\n}) {\n  _s();\n  /* const birdRef = useRef(null);\r\n     function GetDivSizeAction(){\r\n       return birdRef.current == null ? null: birdRef.current.offsetWidth;\r\n   }\r\n   useEffect(()=>{\r\n       if (getDivAction != undefined){\r\n           getDivAction(GetDivSizeAction);\r\n       }\r\n   })\r\n   const [currentSourceImage, setCurrentSourceImage] = useState(0);\r\n     const animateBird = useCallback(() => {\r\n       setCurrentSourceImage((prevSourceImage) => {\r\n           let animationIndex = prevSourceImage + 1;\r\n           if (animationIndex === animation.length) {\r\n               animationIndex = 0;\r\n           }\r\n           return animationIndex;\r\n       });\r\n   }, []);\r\n     useEffect(() => {\r\n       let animationFrameId;\r\n       let previousTime = 0;\r\n         const animateTime = (time) => {\r\n           if (time - previousTime >= 25) {\r\n               animateBird();\r\n               previousTime = time;\r\n           }\r\n           animationFrameId = requestAnimationFrame(animateTime);\r\n       };\r\n         animationFrameId = requestAnimationFrame(animateTime);\r\n         return () => {\r\n           cancelAnimationFrame(animationFrameId);\r\n       };\r\n   }, [animateBird]);\r\n     const url = animation[currentSourceImage];\r\n  */\n  const [currentFrameSource, setCurrentFrameSource] = useState(0);\n  const [url, setUrl] = useState(animation[currentFrameSource]);\n  const birdRef = useRef(null);\n  setTimeout(() => {\n    let animIndex = currentFrameSource + 1;\n    if (animIndex === animation.length) {\n      animIndex = 0;\n    }\n    setCurrentFrameSource(animIndex);\n    setUrl(animation[animIndex]);\n  }, 100);\n  function getDivSizeAction() {\n    return birdRef.current == null ? null : birdRef.current.offsetWidth;\n  }\n  if (getDivSize !== undefined) {\n    setTimeout(() => {\n      getDivSize(getDivSizeAction);\n    }, time);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: birdRef,\n    className: \"bird\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(Bird, \"gz66DInL1pDvMN64c8wq+lTsGfg=\");\n_c = Bird;\nexport default Bird;\nvar _c;\n$RefreshReg$(_c, \"Bird\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","useState","jsxDEV","_jsxDEV","animation","Bird","getDivAction","time","_s","currentFrameSource","setCurrentFrameSource","url","setUrl","birdRef","setTimeout","animIndex","length","getDivSizeAction","current","offsetWidth","getDivSize","undefined","ref","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/student/Documents/git/_404_Dragons.iml/src/Bird.js"],"sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\n\r\nconst animation = [\r\n    \"/Icons/Bird/Bird_1.png\",\r\n    \"/Icons/Bird/Bird_2.png\",\r\n    \"/Icons/Bird/Bird_3.png\",\r\n    \"/Icons/Bird/Bird_4.png\",\r\n    \"/Icons/Bird/Bird_5.png\",\r\n    \"/Icons/Bird/Bird_6.png\",\r\n    \"/Icons/Bird/Bird_7.png\",\r\n    \"/Icons/Bird/Bird_7.png\",\r\n    \"/Icons/Bird/Bird_8.png\",\r\n    \"/Icons/Bird/Bird_9.png\",\r\n    \"/Icons/Bird/Bird_10.png\"\r\n];\r\n\r\nfunction Bird({getDivAction, time}) {\r\n   /* const birdRef = useRef(null);\r\n\r\n    function GetDivSizeAction(){\r\n        return birdRef.current == null ? null: birdRef.current.offsetWidth;\r\n    }\r\n    useEffect(()=>{\r\n        if (getDivAction != undefined){\r\n            getDivAction(GetDivSizeAction);\r\n        }\r\n    })\r\n    const [currentSourceImage, setCurrentSourceImage] = useState(0);\r\n\r\n    const animateBird = useCallback(() => {\r\n        setCurrentSourceImage((prevSourceImage) => {\r\n            let animationIndex = prevSourceImage + 1;\r\n            if (animationIndex === animation.length) {\r\n                animationIndex = 0;\r\n            }\r\n            return animationIndex;\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let animationFrameId;\r\n        let previousTime = 0;\r\n\r\n        const animateTime = (time) => {\r\n            if (time - previousTime >= 25) {\r\n                animateBird();\r\n                previousTime = time;\r\n            }\r\n            animationFrameId = requestAnimationFrame(animateTime);\r\n        };\r\n\r\n        animationFrameId = requestAnimationFrame(animateTime);\r\n\r\n        return () => {\r\n            cancelAnimationFrame(animationFrameId);\r\n        };\r\n    }, [animateBird]);\r\n\r\n    const url = animation[currentSourceImage];\r\n*/\r\n    const [currentFrameSource, setCurrentFrameSource] = useState(0);\r\n\r\n    const [url, setUrl] = useState(animation[currentFrameSource])\r\n\r\n    const birdRef = useRef(null)\r\n\r\n    setTimeout(() => {\r\n        let animIndex = currentFrameSource + 1;\r\n        if(animIndex === animation.length){\r\n            animIndex = 0;\r\n        }\r\n        setCurrentFrameSource(animIndex)\r\n        setUrl(animation[animIndex])\r\n\r\n\r\n    }, 100)\r\n\r\n\r\n    function getDivSizeAction(){\r\n        return birdRef.current == null ? null : birdRef.current.offsetWidth;\r\n    }\r\n\r\n    if(getDivSize!==undefined){\r\n        setTimeout(()=>{\r\n            getDivSize(getDivSizeAction);\r\n        }, time)\r\n    }\r\n    return (\r\n        <div ref={birdRef} className=\"bird\">\r\n            <img src={url} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bird;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,SAAS,GAAG,CACd,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,EACxB,yBAAyB,CAC5B;AAED,SAASC,IAAIA,CAAC;EAACC,YAAY;EAAEC;AAAI,CAAC,EAAE;EAAAC,EAAA;EACjC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAQI,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAE/D,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAACG,SAAS,CAACK,kBAAkB,CAAC,CAAC;EAE7D,MAAMI,OAAO,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE5Bc,UAAU,CAAC,MAAM;IACb,IAAIC,SAAS,GAAGN,kBAAkB,GAAG,CAAC;IACtC,IAAGM,SAAS,KAAKX,SAAS,CAACY,MAAM,EAAC;MAC9BD,SAAS,GAAG,CAAC;IACjB;IACAL,qBAAqB,CAACK,SAAS,CAAC;IAChCH,MAAM,CAACR,SAAS,CAACW,SAAS,CAAC,CAAC;EAGhC,CAAC,EAAE,GAAG,CAAC;EAGP,SAASE,gBAAgBA,CAAA,EAAE;IACvB,OAAOJ,OAAO,CAACK,OAAO,IAAI,IAAI,GAAG,IAAI,GAAGL,OAAO,CAACK,OAAO,CAACC,WAAW;EACvE;EAEA,IAAGC,UAAU,KAAGC,SAAS,EAAC;IACtBP,UAAU,CAAC,MAAI;MACXM,UAAU,CAACH,gBAAgB,CAAC;IAChC,CAAC,EAAEV,IAAI,CAAC;EACZ;EACA,oBACIJ,OAAA;IAAKmB,GAAG,EAAET,OAAQ;IAACU,SAAS,EAAC,MAAM;IAAAC,QAAA,eAC/BrB,OAAA;MAAKsB,GAAG,EAAEd;IAAI;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEd;AAACrB,EAAA,CA5EQH,IAAI;AAAAyB,EAAA,GAAJzB,IAAI;AA8Eb,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}