{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\student\\\\Documents\\\\git\\\\_404_Dragons.iml\\\\src\\\\AllRoad.js\",\n  _s = $RefreshSig$();\n// AllRoad.js\nimport React, { useEffect, useState, useRef } from \"react\";\nimport RoadGenerator from \"./RoadGenerator\";\nimport Hero from \"./Hero\";\nimport ObjectGeneratorTop from \"./ObjectGeneratorTop\";\nimport ObjectGeneratorEarth from \"./ObjectGeneratorEarth\";\nimport ObjectGeneratorGrass from \"./ObjectCreatorGrass\";\nimport ObjectGeneratorMid from \"./ObjectGeneratorMid\";\nimport \"./style/AllRoad.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet personNeedJump = false;\nfunction AllRoad() {\n  _s();\n  const roadGenerator = useRef(new RoadGenerator());\n  const [roadArr, setRoadArr] = useState(roadGenerator.current.getContent());\n  const divRef = useRef(null);\n  const heroRef = useRef(null);\n  let offsetRoadInterval = 0;\n  let offsetHeroInterval = 0; //450\n  let divSize = null;\n  let needNextUpdate = true;\n  let heroTopIndex = 0; //160\n\n  function getDivSize(getDivSizeAction) {\n    if (getDivSizeAction() !== null) {\n      divSize = getDivSizeAction();\n    }\n  }\n  function setDivMove(time) {\n    setTimeout(() => {\n      if (divRef.current === null || divSize === null || heroRef === null) {\n        setDivMove(time);\n        return;\n      }\n      setTimeout(() => {\n        if (heroTopIndex <= -80) {\n          personNeedJump = false;\n        }\n        if (personNeedJump === true && heroTopIndex !== -80) {\n          heroTopIndex -= 2;\n        } else if (personNeedJump === false && heroTopIndex !== 0) {\n          heroTopIndex += 2;\n        }\n      }, 50);\n      offsetRoadInterval -= 1;\n      offsetHeroInterval += 1;\n      if (offsetRoadInterval <= -divSize) {\n        offsetRoadInterval += divSize;\n        needNextUpdate = false;\n        setRoadArr(roadGenerator.current.RoadMoveLogic(roadArr));\n      }\n      heroRef.current.style.top = `${heroTopIndex}px`;\n      if (needNextUpdate) {\n        divRef.current.style.left = `${offsetRoadInterval}px`;\n        heroRef.current.style.left = `${offsetHeroInterval}px`;\n        setDivMove(time);\n      }\n    }, time);\n  }\n  useEffect(() => {\n    return () => {\n      heroRef.current.style.left = `0px`; //450\n      heroRef.current.style.left = `${offsetRoadInterval}px`;\n    };\n  });\n  setDivMove(10);\n  let jumpEvent = event => {\n    personNeedJump = true;\n  };\n  const windowWidth = window.innerWidth;\n  const objectCount = Math.floor(windowWidth / 35);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AllRoadContainer\",\n    children: Array.from({\n      length: 20\n    }).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RowContainer\",\n      children: Array.from({\n        length: objectCount\n      }).map((_, objectIndex) => {\n        let component;\n        if (rowIndex === 13) {\n          component = /*#__PURE__*/_jsxDEV(ObjectGeneratorTop, {\n            time: 50,\n            getDivAction: getDivSize,\n            objectIndex: roadArr[objectIndex]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 23\n          }, this);\n        } else if (rowIndex === 14) {\n          if (objectIndex === 5) {\n            component = /*#__PURE__*/_jsxDEV(Hero, {\n              heroRef: heroRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this);\n          } else {\n            component = /*#__PURE__*/_jsxDEV(ObjectGeneratorMid, {\n              time: 50,\n              getDivAction: getDivSize,\n              objectIndex: roadArr[objectIndex]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this);\n          }\n        } else if (rowIndex === 15) {\n          component = /*#__PURE__*/_jsxDEV(ObjectGeneratorGrass, {\n            getDivAction: getDivSize,\n            objectIndex: roadArr[objectIndex]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 23\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PixelContainer\",\n          children: component\n        }, objectIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this);\n      })\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n}\n_s(AllRoad, \"lFSUcBCI6oHMnAmc1WNLoY6IwbA=\");\n_c = AllRoad;\nexport default AllRoad;\n\n/*import React, { useEffect, useState, useRef } from \"react\";\r\nimport RoadGenerator from \"./RoadGenerator\";\r\nimport Hero from \"./Hero\";\r\nimport ObjectGeneratorTop from \"./ObjectGeneratorTop\";\r\nimport ObjectGeneratorEarth from \"./ObjectGeneratorEarth\";\r\nimport ObjectGeneratorGrass from \"./ObjectCreatorGrass\";\r\nimport ObjectGeneratorMid from \"./ObjectGeneratorMid\";\r\nimport \"./style/AllRoad.css\";\r\n\r\nlet personNeedJump = false;\r\n\r\nfunction AllRoad({Road}) {\r\n\r\n  const [RoadArr, setRoad] = useState(Road.getContent());\r\n  const divRef= useRef(null);\r\n  const heroRef = useRef(null);\r\n\r\n  let offsetRoadInterval = 0;\r\n  let offsetHeroInterval = 0; //450\r\n  let divSize = null;\r\n  let needNextUpdate = true;\r\n\r\n  let heroTopIndex = 0; //160\r\n\r\n\r\n  function getDivSize(getDivSizeAction) {\r\n    if (getDivSizeAction() !== null) {\r\n      divSize = getDivSizeAction();\r\n    }\r\n  }\r\n\r\n  function SetDivMove(time) {\r\n    setTimeout(() => {\r\n\r\n      if (divRef.current === null || divSize===null || heroRef === null) {\r\n        SetDivMove(time);\r\n        return;\r\n      }\r\n\r\n      setTimeout(()=>{\r\n\r\n        if(heroTopIndex <= -80){ //80\r\n          personNeedJump = false;\r\n        }\r\n\r\n        if (personNeedJump === true && heroTopIndex !== -80){ //160\r\n          heroTopIndex -= 2;\r\n        }\r\n        else if (personNeedJump === false && heroTopIndex !== 0) { //160\r\n          heroTopIndex += 2;\r\n        }\r\n      }, 50);\r\n\r\n      offsetRoadInterval -= 1;\r\n      offsetHeroInterval += 1;\r\n\r\n      if (offsetRoadInterval <= -divSize) {\r\n        offsetRoadInterval += divSize;\r\n        needNextUpdate = false;\r\n        setRoad(Road.RoadMoveLogic(RoadArr));\r\n      }\r\n\r\n      heroRef.current.style.top = `${heroTopIndex}px`;\r\n\r\n      if(needNextUpdate){\r\n        divRef.current.style.left = `${offsetRoadInterval}px`;\r\n        heroRef.current.style.left = `${offsetHeroInterval}px`;\r\n        SetDivMove(time);\r\n      }\r\n    }, time)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    return ()=>{\r\n      heroRef.current.style.left = `0px`; //450\r\n      heroRef.current.style.left = `${offsetRoadInterval}px`;\r\n    }\r\n  })\r\n/*\r\n  SetDivMove(10);\r\n  let JumpEvent = (event)=> {\r\n    /* 32 - Space button code*/\n//console.log(`Samurai location: ${samuraiRef.current.style.top}`);\n/*  personNeedJump = true;\r\n}\r\n  const windowWidth = window.innerWidth;\r\nconst objectCount = Math.floor(windowWidth / 35);\r\n  return (\r\n    <div className=\"AllRoadContainer\">\r\n      {Array.from({ length: 20 }).map((_, rowIndex) => (\r\n          <div key={rowIndex} className=\"RowContainer\">\r\n            {Array.from({ length: objectCount }).map((_, objectIndex) => {\r\n              let component;\r\n                if (rowIndex === 13) {\r\n                component = (\r\n                    <ObjectGeneratorTop\r\n                        time={50}\r\n                        getDivAction={getDivSize}\r\n                        objectIndex={RoadArr[objectIndex]}\r\n                    />\r\n                );\r\n              } else if (rowIndex === 14) {\r\n                if (objectIndex === 5) {\r\n                  component = <Hero heroRef={heroRef} />;\r\n                } else {\r\n                  component = (\r\n                      <ObjectGeneratorMid\r\n                          time={50}\r\n                          getDivAction={getDivSize}\r\n                          objectIndex={RoadArr[objectIndex]}\r\n                      />\r\n                  );\r\n                }\r\n              } else if (rowIndex === 15) {\r\n                component = (\r\n                    <ObjectGeneratorGrass\r\n                        getDivAction={getDivSize}\r\n                        objectIndex={RoadArr[objectIndex]}\r\n                    />\r\n                );\r\n              }\r\n                return (\r\n                  <div key={objectIndex} className=\"PixelContainer\">\r\n                    {component}\r\n                  </div>\r\n              );\r\n            })}\r\n          </div>\r\n      ))}\r\n    </div>\r\n);\r\n}\r\nexport default AllRoad;*/\nvar _c;\n$RefreshReg$(_c, \"AllRoad\");","map":{"version":3,"names":["React","useEffect","useState","useRef","RoadGenerator","Hero","ObjectGeneratorTop","ObjectGeneratorEarth","ObjectGeneratorGrass","ObjectGeneratorMid","jsxDEV","_jsxDEV","personNeedJump","AllRoad","_s","roadGenerator","roadArr","setRoadArr","current","getContent","divRef","heroRef","offsetRoadInterval","offsetHeroInterval","divSize","needNextUpdate","heroTopIndex","getDivSize","getDivSizeAction","setDivMove","time","setTimeout","RoadMoveLogic","style","top","left","jumpEvent","event","windowWidth","window","innerWidth","objectCount","Math","floor","className","children","Array","from","length","map","_","rowIndex","objectIndex","component","getDivAction","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/student/Documents/git/_404_Dragons.iml/src/AllRoad.js"],"sourcesContent":["// AllRoad.js\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport RoadGenerator from \"./RoadGenerator\";\r\nimport Hero from \"./Hero\";\r\nimport ObjectGeneratorTop from \"./ObjectGeneratorTop\";\r\nimport ObjectGeneratorEarth from \"./ObjectGeneratorEarth\";\r\nimport ObjectGeneratorGrass from \"./ObjectCreatorGrass\";\r\nimport ObjectGeneratorMid from \"./ObjectGeneratorMid\";\r\nimport \"./style/AllRoad.css\";\r\n\r\nlet personNeedJump = false;\r\n\r\nfunction AllRoad() {\r\n  const roadGenerator = useRef(new RoadGenerator());\r\n  const [roadArr, setRoadArr] = useState(roadGenerator.current.getContent());\r\n  const divRef = useRef(null);\r\n  const heroRef = useRef(null);\r\n\r\n  let offsetRoadInterval = 0;\r\n  let offsetHeroInterval = 0; //450\r\n  let divSize = null;\r\n  let needNextUpdate = true;\r\n\r\n  let heroTopIndex = 0; //160\r\n\r\n  function getDivSize(getDivSizeAction) {\r\n    if (getDivSizeAction() !== null) {\r\n      divSize = getDivSizeAction();\r\n    }\r\n  }\r\n\r\n  function setDivMove(time) {\r\n    setTimeout(() => {\r\n      if (divRef.current === null || divSize === null || heroRef === null) {\r\n        setDivMove(time);\r\n        return;\r\n      }\r\n\r\n      setTimeout(() => {\r\n        if (heroTopIndex <= -80) {\r\n          personNeedJump = false;\r\n        }\r\n\r\n        if (personNeedJump === true && heroTopIndex !== -80) {\r\n          heroTopIndex -= 2;\r\n        } else if (personNeedJump === false && heroTopIndex !== 0) {\r\n          heroTopIndex += 2;\r\n        }\r\n      }, 50);\r\n\r\n      offsetRoadInterval -= 1;\r\n      offsetHeroInterval += 1;\r\n\r\n      if (offsetRoadInterval <= -divSize) {\r\n        offsetRoadInterval += divSize;\r\n        needNextUpdate = false;\r\n        setRoadArr(roadGenerator.current.RoadMoveLogic(roadArr));\r\n      }\r\n\r\n      heroRef.current.style.top = `${heroTopIndex}px`;\r\n\r\n      if (needNextUpdate) {\r\n        divRef.current.style.left = `${offsetRoadInterval}px`;\r\n        heroRef.current.style.left = `${offsetHeroInterval}px`;\r\n        setDivMove(time);\r\n      }\r\n    }, time);\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      heroRef.current.style.left = `0px`; //450\r\n      heroRef.current.style.left = `${offsetRoadInterval}px`;\r\n    };\r\n  });\r\n\r\n  setDivMove(10);\r\n\r\n  let jumpEvent = (event) => {\r\n    personNeedJump = true;\r\n  };\r\n\r\n  const windowWidth = window.innerWidth;\r\n  const objectCount = Math.floor(windowWidth / 35);\r\n\r\n  return (\r\n      <div className=\"AllRoadContainer\">\r\n        {Array.from({ length: 20 }).map((_, rowIndex) => (\r\n            <div key={rowIndex} className=\"RowContainer\">\r\n              {Array.from({ length: objectCount }).map((_, objectIndex) => {\r\n                let component;\r\n\r\n                if (rowIndex === 13) {\r\n                  component = (\r\n                      <ObjectGeneratorTop\r\n                          time={50}\r\n                          getDivAction={getDivSize}\r\n                          objectIndex={roadArr[objectIndex]}\r\n                      />\r\n                  );\r\n                } else if (rowIndex === 14) {\r\n                  if (objectIndex === 5) {\r\n                    component = <Hero heroRef={heroRef} />;\r\n                  } else {\r\n                    component = (\r\n                        <ObjectGeneratorMid\r\n                            time={50}\r\n                            getDivAction={getDivSize}\r\n                            objectIndex={roadArr[objectIndex]}\r\n                        />\r\n                    );\r\n                  }\r\n                } else if (rowIndex === 15) {\r\n                  component = (\r\n                      <ObjectGeneratorGrass\r\n                          getDivAction={getDivSize}\r\n                          objectIndex={roadArr[objectIndex]}\r\n                      />\r\n                  );\r\n                }\r\n\r\n                return (\r\n                    <div key={objectIndex} className=\"PixelContainer\">\r\n                      {component}\r\n                    </div>\r\n                );\r\n              })}\r\n            </div>\r\n        ))}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AllRoad;\r\n\r\n/*import React, { useEffect, useState, useRef } from \"react\";\r\nimport RoadGenerator from \"./RoadGenerator\";\r\nimport Hero from \"./Hero\";\r\nimport ObjectGeneratorTop from \"./ObjectGeneratorTop\";\r\nimport ObjectGeneratorEarth from \"./ObjectGeneratorEarth\";\r\nimport ObjectGeneratorGrass from \"./ObjectCreatorGrass\";\r\nimport ObjectGeneratorMid from \"./ObjectGeneratorMid\";\r\nimport \"./style/AllRoad.css\";\r\n\r\nlet personNeedJump = false;\r\n\r\nfunction AllRoad({Road}) {\r\n\r\n  const [RoadArr, setRoad] = useState(Road.getContent());\r\n  const divRef= useRef(null);\r\n  const heroRef = useRef(null);\r\n\r\n  let offsetRoadInterval = 0;\r\n  let offsetHeroInterval = 0; //450\r\n  let divSize = null;\r\n  let needNextUpdate = true;\r\n\r\n  let heroTopIndex = 0; //160\r\n\r\n\r\n  function getDivSize(getDivSizeAction) {\r\n    if (getDivSizeAction() !== null) {\r\n      divSize = getDivSizeAction();\r\n    }\r\n  }\r\n\r\n  function SetDivMove(time) {\r\n    setTimeout(() => {\r\n\r\n      if (divRef.current === null || divSize===null || heroRef === null) {\r\n        SetDivMove(time);\r\n        return;\r\n      }\r\n\r\n      setTimeout(()=>{\r\n\r\n        if(heroTopIndex <= -80){ //80\r\n          personNeedJump = false;\r\n        }\r\n\r\n        if (personNeedJump === true && heroTopIndex !== -80){ //160\r\n          heroTopIndex -= 2;\r\n        }\r\n        else if (personNeedJump === false && heroTopIndex !== 0) { //160\r\n          heroTopIndex += 2;\r\n        }\r\n      }, 50);\r\n\r\n      offsetRoadInterval -= 1;\r\n      offsetHeroInterval += 1;\r\n\r\n      if (offsetRoadInterval <= -divSize) {\r\n        offsetRoadInterval += divSize;\r\n        needNextUpdate = false;\r\n        setRoad(Road.RoadMoveLogic(RoadArr));\r\n      }\r\n\r\n      heroRef.current.style.top = `${heroTopIndex}px`;\r\n\r\n      if(needNextUpdate){\r\n        divRef.current.style.left = `${offsetRoadInterval}px`;\r\n        heroRef.current.style.left = `${offsetHeroInterval}px`;\r\n        SetDivMove(time);\r\n      }\r\n    }, time)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    return ()=>{\r\n      heroRef.current.style.left = `0px`; //450\r\n      heroRef.current.style.left = `${offsetRoadInterval}px`;\r\n    }\r\n  })\r\n/*\r\n  SetDivMove(10);\r\n  let JumpEvent = (event)=> {\r\n    /* 32 - Space button code*/\r\n    //console.log(`Samurai location: ${samuraiRef.current.style.top}`);\r\n  /*  personNeedJump = true;\r\n  }\r\n\r\n  const windowWidth = window.innerWidth;\r\n  const objectCount = Math.floor(windowWidth / 35);\r\n\r\n  return (\r\n      <div className=\"AllRoadContainer\">\r\n        {Array.from({ length: 20 }).map((_, rowIndex) => (\r\n            <div key={rowIndex} className=\"RowContainer\">\r\n              {Array.from({ length: objectCount }).map((_, objectIndex) => {\r\n                let component;\r\n\r\n                if (rowIndex === 13) {\r\n                  component = (\r\n                      <ObjectGeneratorTop\r\n                          time={50}\r\n                          getDivAction={getDivSize}\r\n                          objectIndex={RoadArr[objectIndex]}\r\n                      />\r\n                  );\r\n                } else if (rowIndex === 14) {\r\n                  if (objectIndex === 5) {\r\n                    component = <Hero heroRef={heroRef} />;\r\n                  } else {\r\n                    component = (\r\n                        <ObjectGeneratorMid\r\n                            time={50}\r\n                            getDivAction={getDivSize}\r\n                            objectIndex={RoadArr[objectIndex]}\r\n                        />\r\n                    );\r\n                  }\r\n                } else if (rowIndex === 15) {\r\n                  component = (\r\n                      <ObjectGeneratorGrass\r\n                          getDivAction={getDivSize}\r\n                          objectIndex={RoadArr[objectIndex]}\r\n                      />\r\n                  );\r\n                }\r\n\r\n                return (\r\n                    <div key={objectIndex} className=\"PixelContainer\">\r\n                      {component}\r\n                    </div>\r\n                );\r\n              })}\r\n            </div>\r\n        ))}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AllRoad;*/\r\n"],"mappings":"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CR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEZ;AAAC5C,EAAA,CAvHQD,OAAO;AAAA8C,EAAA,GAAP9C,OAAO;AAyHhB,eAAeA,OAAO;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjDE,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}