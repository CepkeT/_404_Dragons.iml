{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\student\\\\Documents\\\\git\\\\_404_Dragons.iml\\\\src\\\\Tree_1.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tree_1() {\n  _s();\n  const divRef = useRef(null);\n  useEffect(() => {\n    const divElement = divRef.current; //текуший элемент div для которого нужно получить размер\n    if (divElement) {\n      const {\n        width,\n        height\n      } = divElement.getBoundingClientRect();\n      // getBoundingClientRect() возвращает объект с размерами\n      console.log(\"Размер Tree_1:\", width);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: divRef,\n    className: \"Tree_1\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"tree_1\",\n      src: \"/Icons/Landscape/tree_1.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(Tree_1, \"yu+j3H3uMpPkc7UDcPsbvSQj1vE=\");\n_c = Tree_1;\nexport default Tree_1;\nvar _c;\n$RefreshReg$(_c, \"Tree_1\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Tree_1","_s","divRef","divElement","current","width","height","getBoundingClientRect","console","log","ref","className","children","id","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/student/Documents/git/_404_Dragons.iml/src/Tree_1.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n\r\nfunction Tree_1() {\r\n    const divRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const divElement = divRef.current;//текуший элемент div для которого нужно получить размер\r\n        if (divElement) {\r\n            const { width, height } = divElement.getBoundingClientRect();\r\n            // getBoundingClientRect() возвращает объект с размерами\r\n            console.log(\"Размер Tree_1:\", width);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div ref={divRef} className=\"Tree_1\">\r\n            <img id=\"tree_1\" src=\"/Icons/Landscape/tree_1.png\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tree_1;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,MAAM,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE3BC,SAAS,CAAC,MAAM;IACZ,MAAMM,UAAU,GAAGD,MAAM,CAACE,OAAO,CAAC;IAClC,IAAID,UAAU,EAAE;MACZ,MAAM;QAAEE,KAAK;QAAEC;MAAO,CAAC,GAAGH,UAAU,CAACI,qBAAqB,CAAC,CAAC;MAC5D;MACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,KAAK,CAAC;IACxC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAKW,GAAG,EAAER,MAAO;IAACS,SAAS,EAAC,QAAQ;IAAAC,QAAA,eAChCb,OAAA;MAAKc,EAAE,EAAC,QAAQ;MAACC,GAAG,EAAC;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEd;AAACjB,EAAA,CAjBQD,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAmBf,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}