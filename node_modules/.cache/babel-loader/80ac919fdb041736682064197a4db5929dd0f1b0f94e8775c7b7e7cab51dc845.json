{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\student\\\\Documents\\\\git\\\\_404_Dragons.iml\\\\src\\\\AllRoad.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport RoadGenerator from \"./RoadGenerator\";\nimport Hero from \"./Hero\";\nimport ObjectGeneratorTop from \"./ObjectGeneratorTop\";\nimport ObjectGeneratorEarth from \"./ObjectGeneratorEarth\";\nimport ObjectGeneratorGrass from \"./ObjectCreatorGrass\";\nimport ObjectGeneratorMid from \"./ObjectGeneratorMid\";\nimport \"./style/AllRoad.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet personNeedJump = false;\nfunction AllRoad() {\n  _s();\n  const roadGenerator = new RoadGenerator();\n  const [road, setRoad] = useState(roadGenerator.getContent());\n  const divRef = useRef(null);\n  const heroRef = useRef(null);\n  const ObjectCreatorBirdMemo = /*#__PURE__*/React.memo(ObjectGeneratorTop);\n  const HeroMemo = /*#__PURE__*/React.memo(Hero);\n  const ObjectCreatorGrassMemo = /*#__PURE__*/React.memo(ObjectGeneratorGrass);\n  let heroOffset = 0;\n  let cellSize = null;\n  let divOffset = 0;\n  let needNextUpdate = true;\n  let heroTopIndex = 0;\n  function getDivSize(getDivSizeAction) {\n    if (getDivSizeAction() !== null) {\n      cellSize = getDivSizeAction();\n    }\n  }\n  useEffect(() => {\n    function SetDivMove(time) {\n      let animationFrameId;\n      const animate = timestamp => {\n        if (divRef.current === null || divRef === null || heroRef === null) {\n          animationFrameId = requestAnimationFrame(animate);\n          return;\n        }\n        if (heroTopIndex <= -80) {\n          personNeedJump = false;\n        }\n        if (personNeedJump === true && heroTopIndex !== -80) {\n          heroTopIndex -= 2;\n        } else if (personNeedJump === false && heroTopIndex !== 0) {\n          heroTopIndex += 2;\n        }\n        divOffset -= 1;\n        heroOffset += 1;\n        if (divOffset <= -cellSize) {\n          divOffset += cellSize;\n          needNextUpdate = false;\n          setRoad(roadGenerator.RoadMoveLogic(road));\n        }\n        heroRef.current.style.top = `${heroTopIndex}px`;\n        if (needNextUpdate) {\n          heroRef.current.style.left = `${divOffset}px`;\n          heroRef.current.style.left = `${heroOffset}px`;\n          animationFrameId = requestAnimationFrame(animate);\n        }\n      };\n      animationFrameId = requestAnimationFrame(animate);\n      return () => {\n        cancelAnimationFrame(animationFrameId);\n      };\n    }\n    SetDivMove(10);\n  }, []);\n  let JumpEvent = event => {\n    personNeedJump = true;\n  };\n  const windowWidth = window.innerWidth;\n  const objectCount = Math.floor(windowWidth / 35);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AllRoadContainer\",\n    children: Array.from({\n      length: 20\n    }).map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RowContainer\",\n      children: Array.from({\n        length: objectCount\n      }).map((_, objectIndex) => {\n        let component;\n        if (rowIndex === 13) {\n          component = /*#__PURE__*/_jsxDEV(ObjectCreatorBirdMemo, {\n            getDivAction: getDivSize,\n            objectIndex: road[objectIndex]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 23\n          }, this);\n        } else if (rowIndex === 14) {\n          if (objectIndex === 5) {\n            component = /*#__PURE__*/_jsxDEV(HeroMemo, {\n              heroRef: heroRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this);\n          } else {\n            component = /*#__PURE__*/_jsxDEV(ObjectGeneratorMid, {\n              getDivAction: getDivSize,\n              objectIndex: road[objectIndex]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this);\n          }\n        } else if (rowIndex === 15) {\n          component = /*#__PURE__*/_jsxDEV(ObjectCreatorGrassMemo, {\n            getDivAction: getDivSize,\n            objectIndex: road[objectIndex]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 23\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"PixelContainer\",\n          children: component\n        }, objectIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this);\n      })\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n}\n_s(AllRoad, \"IQtRm9hOusFioH8ooSO/irh3MOo=\");\n_c = AllRoad;\nexport default AllRoad;\nvar _c;\n$RefreshReg$(_c, \"AllRoad\");","map":{"version":3,"names":["React","useEffect","useState","useRef","RoadGenerator","Hero","ObjectGeneratorTop","ObjectGeneratorEarth","ObjectGeneratorGrass","ObjectGeneratorMid","jsxDEV","_jsxDEV","personNeedJump","AllRoad","_s","roadGenerator","road","setRoad","getContent","divRef","heroRef","ObjectCreatorBirdMemo","memo","HeroMemo","ObjectCreatorGrassMemo","heroOffset","cellSize","divOffset","needNextUpdate","heroTopIndex","getDivSize","getDivSizeAction","SetDivMove","time","animationFrameId","animate","timestamp","current","requestAnimationFrame","RoadMoveLogic","style","top","left","cancelAnimationFrame","JumpEvent","event","windowWidth","window","innerWidth","objectCount","Math","floor","className","children","Array","from","length","map","_","rowIndex","objectIndex","component","getDivAction","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/student/Documents/git/_404_Dragons.iml/src/AllRoad.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport RoadGenerator from \"./RoadGenerator\";\r\nimport Hero from \"./Hero\";\r\nimport ObjectGeneratorTop from \"./ObjectGeneratorTop\";\r\nimport ObjectGeneratorEarth from \"./ObjectGeneratorEarth\";\r\nimport ObjectGeneratorGrass from \"./ObjectCreatorGrass\";\r\nimport ObjectGeneratorMid from \"./ObjectGeneratorMid\";\r\nimport \"./style/AllRoad.css\";\r\n\r\nlet personNeedJump = false;\r\n\r\nfunction AllRoad() {\r\n  const roadGenerator = new RoadGenerator();\r\n  const [road, setRoad] = useState(roadGenerator.getContent());\r\n  const divRef = useRef(null);\r\n  const heroRef = useRef(null);\r\n  const ObjectCreatorBirdMemo = React.memo(ObjectGeneratorTop);\r\n  const HeroMemo = React.memo(Hero);\r\n  const ObjectCreatorGrassMemo = React.memo(ObjectGeneratorGrass);\r\n\r\n  let heroOffset = 0;\r\n  let cellSize = null;\r\n  let divOffset = 0;\r\n  let needNextUpdate = true;\r\n  let heroTopIndex = 0;\r\n\r\n  function getDivSize(getDivSizeAction) {\r\n    if (getDivSizeAction() !== null) {\r\n      cellSize = getDivSizeAction();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    function SetDivMove(time) {\r\n      let animationFrameId;\r\n\r\n      const animate = (timestamp) => {\r\n        if (divRef.current === null || divRef === null || heroRef === null) {\r\n          animationFrameId = requestAnimationFrame(animate);\r\n          return;\r\n        }\r\n\r\n        if (heroTopIndex <= -80) {\r\n          personNeedJump = false;\r\n        }\r\n\r\n        if (personNeedJump === true && heroTopIndex !== -80) {\r\n          heroTopIndex -= 2;\r\n        } else if (personNeedJump === false && heroTopIndex !== 0) {\r\n          heroTopIndex += 2;\r\n        }\r\n\r\n        divOffset -= 1;\r\n        heroOffset += 1;\r\n\r\n        if (divOffset <= -cellSize) {\r\n          divOffset += cellSize;\r\n          needNextUpdate = false;\r\n          setRoad(roadGenerator.RoadMoveLogic(road));\r\n        }\r\n\r\n        heroRef.current.style.top = `${heroTopIndex}px`;\r\n\r\n        if (needNextUpdate) {\r\n          heroRef.current.style.left = `${divOffset}px`;\r\n          heroRef.current.style.left = `${heroOffset}px`;\r\n          animationFrameId = requestAnimationFrame(animate);\r\n        }\r\n      };\r\n\r\n      animationFrameId = requestAnimationFrame(animate);\r\n\r\n      return () => {\r\n        cancelAnimationFrame(animationFrameId);\r\n      };\r\n    }\r\n\r\n    SetDivMove(10);\r\n  }, []);\r\n\r\n  let JumpEvent = (event) => {\r\n    personNeedJump = true;\r\n  };\r\n\r\n  const windowWidth = window.innerWidth;\r\n  const objectCount = Math.floor(windowWidth / 35);\r\n\r\n  return (\r\n      <div className=\"AllRoadContainer\">\r\n        {Array.from({ length: 20 }).map((_, rowIndex) => (\r\n            <div key={rowIndex} className=\"RowContainer\">\r\n              {Array.from({ length: objectCount }).map((_, objectIndex) => {\r\n                let component;\r\n\r\n                if (rowIndex === 13) {\r\n                  component = (\r\n                      <ObjectCreatorBirdMemo\r\n                          getDivAction={getDivSize}\r\n                          objectIndex={road[objectIndex]}\r\n                      />\r\n                  );\r\n                } else if (rowIndex === 14) {\r\n                  if (objectIndex === 5) {\r\n                    component = <HeroMemo heroRef={heroRef} />;\r\n                  } else {\r\n                    component = (\r\n                        <ObjectGeneratorMid\r\n                            getDivAction={getDivSize}\r\n                            objectIndex={road[objectIndex]}\r\n                        />\r\n                    );\r\n                  }\r\n                } else if (rowIndex === 15) {\r\n                  component = (\r\n                      <ObjectCreatorGrassMemo\r\n                          getDivAction={getDivSize}\r\n                          objectIndex={road[objectIndex]}\r\n                      />\r\n                  );\r\n                }\r\n\r\n                return (\r\n                    <div key={objectIndex} className=\"PixelContainer\">\r\n                      {component}\r\n                    </div>\r\n                );\r\n              })}\r\n            </div>\r\n        ))}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AllRoad;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}